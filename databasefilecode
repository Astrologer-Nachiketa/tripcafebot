-- First, ensure the pgvector extension is enabled (running this is safe even if it's already enabled)
create extension if not exists vector;

-- Create the documents table
create table public.documents (
  id bigint primary key generated by default as identity,
  created_at timestamptz default now() not null,
  content text,
  embedding vector(768)
);

-- Optional: Add comments to describe the table and its columns for future reference
comment on table public.documents is 'Stores text chunks and their vector embeddings for the knowledge base.';
comment on column public.documents.embedding is 'The 768-dimension vector from the embedding-001 model.';

-- Create a function to search for documents
create or replace function match_documents (
  query_embedding vector(768),
  match_threshold float,
  match_count int
)
returns table (
  id bigint,
  content text,
  created_at timestamptz,
  similarity float
)
language plpgsql
as $$
begin
  return query
  select
    documents.id,
    documents.content,
    documents.created_at,
    1 - (documents.embedding <=> query_embedding) as similarity
  from documents
  where 1 - (documents.embedding <=> query_embedding) > match_threshold
  order by similarity desc
  limit match_count;
end;
$$;
